<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="timer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>187, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAICAgBBQUFAQMDAwICAgICAwMDAwICAgMCAgIDAQEBAwEBAQQCAgIEAgICBAIC
        AgQBAQEEAgICAwICAgMBAQEDAgICAwMDAwIDAwMCBQUFAQUFBQEJCQkBAAAAAAAAAAAAAAAAAAAAAAAA
        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
        zf+TvNT9bpev1kSEk9Yfa3v/H2t7/yh2h/8xgpP/Oo2f/zqNn/86jZ//Qoyc6tLi5jYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAx8/bOAAkWP9TgZfCSYOk2i58
        qf8td6T/LHOe/ypUfv8taZH8NWOD7jFXc/EsRmT2LEhi9S5JYvAuSWTwLkZk8y1NbPMoU3j7J1uC/yhW
        fv8qYYv/K3Of/yx5p/8/i7j/ianC/63T5/9wqL3KLnWE7h9re/8jcIH/KHaH/yh2h/8odof/q8nPYQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADb6Oopi6i5fVyI
        q7QziLX7LWSQ/y1smP8veKX9NGSE8TFOa/IrT3X/KFqB/ydZf/8lU3j/KUlx/yVKb/8lRmv/JUNn/yVB
        ZP8lPV//K0Fd9ipCXfY0XXruM3af9S16qP8sZpT/MIi5/0ym0/+92+v/eqC78jx/jd4fa3v/H2t7/x9r
        e/9Jh5XP8fb3EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG6f
        qqUga3v+XpmzwTCKuv8whrT/L4Gv/zdojfAsXoP9LViD/ylkjf8oYIj/KF2E/yhdhP8nW4H/K095/yZS
        d/8lT3T/JEpu/yRHav8kR2r/JEdq/yRHav8kRmr/JDVT/ixJZPQ2apLyL4i4/zGPwf80irn/tsfW/4Wx
        yvMwd4bsH2t7/yVwf/g/gY7aR4aT0ery8xgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKrHzWFoobO8OHWg/y5olf8xgK7+MWB+8yx0oP8sdaH/MVuK/ypslv8paJH/KWSN/yhg
        iP8oXYT/LVR//ydagf8mV33/JVF2/yVOcv8kSm7/JEdq/yRHav8kRmn/Jj5j/yRHav8kQGH+OXie7S10
        o/8sXYr/Lnel/8DX5P9tnrTPIGx8/1WPm8Efa3v/H2t7/z1/jdy709hP1eTnMvP4+Q4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPv9/gV/vdvuNJHB/zCJuP8xWnv1M4Oy/y2Arv8tfKr/MmOS/yxy
        n/8rb5r/KmyW/ylokf8oYor/LlWC/yhdhP8oXYT/J1l//yZVe/8lUXb/JU5y/yRIbP8mQWb/JERo/yRH
        av8kR2r/JUFi/TZokPEseaf/LHaj/0mGrP+yx9b/ao6hrh9re/8fa3v/Im9//yh3h/8vf5D/MoOU/0GM
        nOygxs529/r7CgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALHK3WWTtc7/MI29/zyBp+03cqD/s9Xn/1ig
        xv8uhLP/MHWl/zBvn/8sd6P/LHOf/ytvmv8papP/L1yJ/yhiiv8oXob/KF2E/yhdhP8nWX//JlV7/yVP
        dP8nQ2r/JEhs/yRHav8kR2r/JEdq/yc+W/k3eJ/wK2WR/ypTff99l7D/d5yz6yFtff0ib3//LHuM/zKD
        lP88kKH/P5Sl/z+Upf8/lKX/Tpuq56fK0W76/PwHAAAAAAAAAAAAAAAAAAAAALnc7WiGvdr/Lm6c/zRk
        hvNZpM7/p8nf/8bg7v9nqs7/L4i3/zRvof8tfqz/LXuo/yx3o/8rcZz/MGKR/ylqk/8pZo//KGCI/yhd
        hP8oXYT/KF2E/yZXff8oSXD/JU90/yRMcP8kR2r/JEdq/yRHav8sQFvyKlqD/yhkjf8zaI7/m7PF/0+K
        l8kod4f/MoOU/z+Upf9GnK7/TaW3/02lt/9Npbf/Rpyu/z+Upf9KkqHhtdDWWAAAAAAAAAAAAAAAAPb7
        /QydzeXEMpHC/zNxlPVxuNz/wNvs/7HS5v/I4vD/f7rY/zltov8vhrX/LoKx/y1+rP8seaX/NGaX/ytx
        nP8qbZj/KWiR/ylkjf8oYIj/KF2E/yhdhP8pUXn/Jld9/yVTeP8lTnL/JEpu/yRHav8jQ2b/LU5q8yde
        hf8mWYD/lKu+/12Mnscvf5D/PJCh/0acrv9Qqbv/W7fJ/4nL2P89hJf/QJCm/1mmtv9KmKj/L3+Q/6/L
        0V0AAAAAAAAAAAAAAAAAAAAA6vT5Gz9WZdpDlsT9v9/v/7jV6P+Wutf/mLzY/4q11P9BgrP/MIq6/y+G
        tf8tgK7/OGaa/yx5pf8sdaH/K2+a/ypslv8paJH/KWSN/ylYgv8oWoL/KF2E/ydbgf8mVXv/JVF2/yVO
        cv8kSm7/JzxZ+ShLcv0mQ2r/aXqV/2J9lN8yg5T/P5Sl/02lt/9atsj/aMLU/5LV4v9Tipb/O3+R/zR8
        lP81epL/N4CT/0GGlN4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhZ26xRoOs7JzN5/+wz+T/2+32/8jk
        8v+62uv/U469/zCNvv8ygLH/OG6i/zZrnv8tfKr/LHej/yxzn/8rb5r/KmyW/yxahf8oYor/KF6G/yhd
        hP8oXYT/J1l//yZVe/8lTnP/ITFR/zBScvAkSm//UGyJ/3KSptwyg5T/P5Sl/02lt/9atsj/cMfY/4DQ
        4P9wxNP/XrjK/02lt/89kaL/K3aM/yNsgf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlJWXdz9e
        dOBpncT/1er1/9vt9v/I5PL/vdzt/2qZxP9Um8b/MIu8/zCDs/82baD/MHWl/y17qP8sdaL/L2SR/y1e
        i/8sWYP/KWWO/yhiiv8oXYT/KF2E/ydOdf8mSm//JVF2/zNMau0kSGv/RGWE/3aWqtwyg5T/P5Sl/02l
        t/9atsj/aMLU/zdbY/8bHiH/R5Ce/02lt/8/lKX/MoOU/yVzg/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOrr6xdXXGS9SHGT64y+3f/K5fL/udrs/6rO5f/I4/H/m8vj/1mmzf83j7//Mnip/zRo
        mv8xaZn/LXmm/yx1of8rbZn/LFuG/ypbhP8pU3z/KE10/ydYf/8oXYT/Jklq/ThScecmQWf/RVx9/3iK
        otS51NpWWKCv2kacrv9Qqbv/WrbI/0eLmv8xV2D/UKm7/0acrv88kKH/L3+Q/zF5iO0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtre5UFFUXcU+Yn7uaqXJ/4m21v/G4/H/yOTy/7Xa
        7P+hzuX/fbjX/1CKtf9QmsH/S5S8/0WLtP8/ha3/Nnym/zRslf8wYov/KF6G/ylIZvgzPkvllZeaddXX
        2jCSp7qAY4Oe5pyyw5YAAAAA+/39BbHU22hcqLjgTaW3/02lt/9Npbf/Rpyu/z+Upf8yg5T/UZGezs3e
        4jkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADk5OUeioyShTxT
        ZuE9bYzzX5O2/Xiu0P98utv/fLvc/1+awf9prND/WKHI/1KZwP9Agan/M2SI/DJPZ+w0PkrkWFpgucvL
        zDr///8BAAAAAAAAAAAAAAAA////AQAAAAAAAAAAAAAAAAAAAAD9/v4DyODlSqXN1XiWxc6MosrSerfU
        2lrn8PIeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADp6ekZtba3UoqLjoFucHOfYWRnrWFjZq5maGuocHJ1nXt9gJGXmZtyvL2+SuPk
        5B8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP//
        /////wAA////////AAD/8AAAP/8AAPAAAAAAfwAAwAAAAAAPAACAAAAAAAcAAAAAAAAABwAAgAAAAAAH
        AADAAAAAAA8AAPAAAAAAfwAA+AAAAAD/AADwAAAAAf8AAPAAAAAD/wAA4AAAAAP/AADAAAAAAf8AAMAA
        AAAAPwAAwAAAAAAPAADAAAAAAAMAAMAAAAAAAQAAwAAAAAAAAADwAAAAAAAAAPwAAAAAAAAA/gAAAAAA
        AAD/AAAAAAAAAP/AAAAIAAAA//AAAd4DAAD//gAf//8AAP///////wAA////////AAD///////8AAP//
        /////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>